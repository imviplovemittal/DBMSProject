#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.15
# In conjunction with Tcl version 8.6
#    Aug 22, 2018 09:12:48 PM

import sys
import dao

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk

    py3 = False
except ImportError:
    import tkinter.ttk as ttk

    py3 = True

import carBooking_support


def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    carBooking_support.set_Tk_var()
    top = Book_Your_Car(root)
    carBooking_support.init(root, top)
    root.mainloop()


w = None


def create_Book_Your_Car(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel(root)
    carBooking_support.set_Tk_var()
    top = Book_Your_Car(w)
    carBooking_support.init(w, top, *args, **kwargs)
    return (w, top)


def destroy_Book_Your_Car():
    global w
    w.destroy()
    w = None


def findVehicles():
    cursor = dao.get_vehicles()
    return cursor


class Book_Your_Car:
    def onClickShowVehicles(self):
        vList = list(findVehicles())
        self.vehicleList.insert(END, "{:30s} {:10s} {:10s}".format('Vehicle', 'Price/km', 'No. of seats'))
        for row in findVehicles():
            self.vehicleList.insert(END, "{:30s} {:10s} {:10s}".format(row[0], str(row[1]), str(row[2])))

    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9'  # X11 color: 'gray85'
        _ana1color = '#d9d9d9'  # X11 color: 'gray85'
        _ana2color = '#d9d9d9'  # X11 color: 'gray85'
        font10 = "-family Cousine -size 18 -weight normal -slant roman" \
                 " -underline 0 -overstrike 0"
        font11 = "-family Roboto -size 18 -weight normal -slant roman " \
                 "-underline 0 -overstrike 0"
        font9 = "-family Roboto -size 20 -weight normal -slant roman " \
                "-underline 0 -overstrike 0"

        top.geometry("1001x358+551+22")
        top.title("Book Your Car")
        top.configure(background="#006cd8")

        self.tripLabel = Label(top)
        self.tripLabel.place(relx=0.02, rely=0.02, height=48, width=285)
        self.tripLabel.configure(background="#006cd8")
        self.tripLabel.configure(font=font9)
        self.tripLabel.configure(foreground="#ededed")
        self.tripLabel.configure(text='''Select Trip Details''')
        self.tripLabel.configure(width=285)

        self.locationEntry = Entry(top)
        self.locationEntry.place(relx=0.04, rely=0.17, height=47, relwidth=0.34)
        self.locationEntry.configure(background="white")
        self.locationEntry.configure(font=font10)
        self.locationEntry.configure(width=346)

        self.Label2 = Label(top)
        self.Label2.place(relx=0.04, rely=0.12, height=38, width=255)
        self.Label2.configure(font=font10)
        self.Label2.configure(text='''Location (City)''')
        self.Label2.configure(width=255)

        self.Label3 = Label(top)
        self.Label3.place(relx=0.43, rely=0.12, height=35, width=412)
        self.Label3.configure(font=font10)
        self.Label3.configure(text='''Start Date (dd-mmm-yyyy)''')
        self.Label3.configure(width=412)

        self.startDate = Entry(top)
        self.startDate.place(relx=0.43, rely=0.17, height=47, relwidth=0.37)
        self.startDate.configure(background="white")
        self.startDate.configure(font=font10)
        self.startDate.configure(width=376)

        self.Label4 = Label(top)
        self.Label4.place(relx=0.04, rely=0.25, height=35, width=157)
        self.Label4.configure(font=font10)
        self.Label4.configure(text='''Enter Kms''')

        self.kmsEntry = Entry(top)
        self.kmsEntry.place(relx=0.24, rely=0.25, height=37, relwidth=0.34)
        self.kmsEntry.configure(background="white")
        self.kmsEntry.configure(font=font10)

        self.selectVehicleButton = Button(top)
        self.selectVehicleButton.place(relx=0.38, rely=0.3, height=52, width=224)

        self.selectVehicleButton.configure(activebackground="#d9d9d9")
        self.selectVehicleButton.configure(background="#510f5e")
        self.selectVehicleButton.configure(font=font9)
        self.selectVehicleButton.configure(foreground="#ffffff")
        self.selectVehicleButton.configure(text='''Select Vehicle''')
        self.selectVehicleButton.configure(command=self.onClickShowVehicles)

        self.vehicleList = Listbox(top)
        self.vehicleList.place(relx=0.02, rely=0.36, relheight=0.34
                               , relwidth=0.95)
        self.vehicleList.configure(background="#606afc")
        self.vehicleList.configure(font=font10)
        self.vehicleList.configure(relief=FLAT)
        self.vehicleList.configure(selectmode=SINGLE)
        self.vehicleList.configure(setgrid="1")
        self.vehicleList.configure(width=954)

        self.pModeSpinbox = Spinbox(top, from_=1.0, to=100.0)
        self.pModeSpinbox.place(relx=0.32, rely=0.73, relheight=0.05
                                , relwidth=0.28)
        self.pModeSpinbox.configure(activebackground="#f9f9f9")
        self.pModeSpinbox.configure(background="#000000")
        self.pModeSpinbox.configure(font=font9)
        self.pModeSpinbox.configure(foreground="#ffffff")
        self.pModeSpinbox.configure(from_="1.0")
        self.pModeSpinbox.configure(highlightbackground="black")
        self.pModeSpinbox.configure(relief=FLAT)
        self.pModeSpinbox.configure(selectbackground="#c4c4c4")
        self.pModeSpinbox.configure(textvariable=carBooking_support.spinbox)
        self.pModeSpinbox.configure(to="100.0")
        self.pModeSpinbox.configure(width=278)

        self.Label5 = Label(top)
        self.Label5.place(relx=0.02, rely=0.73, height=48, width=285)
        self.Label5.configure(font=font11)
        self.Label5.configure(text='''Select Payment Mode''')
        self.Label5.configure(width=285)

        self.getAmountButton = Button(top)
        self.getAmountButton.place(relx=0.64, rely=0.73, height=52, width=192)
        self.getAmountButton.configure(activebackground="#d9d9d9")
        self.getAmountButton.configure(background="#749606")
        self.getAmountButton.configure(font=font9)
        self.getAmountButton.configure(foreground="#ffffff")
        self.getAmountButton.configure(highlightbackground="#009600")
        self.getAmountButton.configure(text='''Get Amount''')

        self.Label6 = Label(top)
        self.Label6.place(relx=0.02, rely=0.81, height=38, width=275)
        self.Label6.configure(background="#006cd8")
        self.Label6.configure(font=font11)
        self.Label6.configure(foreground="#ffffff")
        self.Label6.configure(text='''Total Amount :''')
        self.Label6.configure(width=275)

        self.amountLabel = Label(top)
        self.amountLabel.place(relx=0.26, rely=0.81, height=38, width=275)
        self.amountLabel.configure(activebackground="#f9f9f9")
        self.amountLabel.configure(background="#006cd8")
        self.amountLabel.configure(font=font11)
        self.amountLabel.configure(foreground="#ffffff")
        self.amountLabel.configure(text='''â‚¹ 00.00''')

        self.payButton = Button(top)
        self.payButton.place(relx=0.43, rely=0.88, height=49, width=73)
        self.payButton.configure(activebackground="#d9d9d9")
        self.payButton.configure(background="#00870e")
        self.payButton.configure(font=font11)
        self.payButton.configure(foreground="#ffffff")
        self.payButton.configure(text='''Pay''')


if __name__ == '__main__':
    vp_start_gui()
